&WinCount //UNUSED MATCH WINS COUNTER, P1 AND P2 GROUPED (FIGHT.SSZ/FIGHT.DEF)
{
  public int posx = 0;
  public int posy = 0;
  public int text_fontn = -1;
  public int text_fontb = 0;
  public int text_fonta = 0;
  public ^/char text_text;
  public &.com.Layout text_lay;
  public &.com.Layout bg_lay;
  public &.sff.Anim!&.bg.Frame? bg;
  public &.ActionList al;
  public void read(^/char p, &.com.Section sc=)
  {
    ^/char data;
    if(#(data = sc.benri(p, "pos")) > 0){
	   .com.readPairOF!int?(`posx=, `posy=, data);
	}
	if(#(data = sc.benri(p, "text.font")) > 0){
      ^^/char spl = .s.split(",", data);
      spl[0] = .s.trim(spl[0]);
      if(#spl[0] > 0) `text_fontn = .com.atonOF!int?(spl[0]);
      if(#spl < 2) break;
      spl[1] = .s.trim(spl[1]);
      if(#spl[1] > 0) `text_fontb = .com.atonOF!int?(spl[1]);
      if(#spl < 3) break;
      spl[2] = .s.trim(spl[2]);
      if(#spl[2] > 0) `text_fonta = .com.atonOF!int?(spl[2]);
    }
    if(#(data = sc.benri(p, "text.text")) > 0) {
	   `text_text = data;
	}
    {
      %char buf .= p .= "text.";
      `text_lay.read(buf, sc=);
    }
	if(#(data = sc.benri(p, "bg.spr")) > 0) {
	   .readSpr(`bg=, data);
	}
	if(#(data = sc.benri(p, "bg.anim")) > 0) {
	   .readAnim(`bg=, `al=, data);
	}
	{
      %char buf .= p .= "bg.";
      `bg_lay.read(buf, sc=);
    }
  }
  public void step()
  {
    loop{index i = 0; do: `bg[i].action(); while ++i < #`bg:}
  }
  public void bgDraw(int layerno)
  {
    .laydraw(
      .com.scrrect=, (float)`posx, (float)`posy, 1.0,
      layerno, `bg=, `bg_lay=);
  }
  public void draw(int layerno, int matchNo, ^&.fnt.Font f)
  {:<-
    if(`text_fontn >= 0 && #f > `text_fontn){
      .laytext(
        (float)`posx, (float)`posy, 1.0, layerno,
		matchNo >= 0 ? "STAGE: " + ''(matchNo) : "o",
        f[`text_fontn]=, `text_fontb, 255, 0, `text_fonta, `text_lay=);
    }
  }
  public void setup(^&.sff.Sff sf)
  {
    `text_lay.scale.x *= .cfg.LifebarFontScale;
    `text_lay.scale.y *= .cfg.LifebarFontScale;
    `text_lay.setup();
	loop{index i = 0; do:
      `bg[i].setup(sf);
      `bg_lay[i].setup();
    while ++i < #`bg:}
  }
  public void reset()
  {
    loop{index i = 0; do: `bg[i].reset(); while ++i < #`bg:}
  }
}